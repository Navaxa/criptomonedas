{"version":3,"sources":["hooks/useModena.js","hooks/useCriptomoneda.js","components/Error.js","components/Form.js","cryptomonedas.png","components/Cotizar.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useModena","stateInitial","options","useState","state","setState","onChange","e","target","value","map","option","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","MessageError","p","Error","mensaje","Button","button","Form","setMoneda","setCriptomoneda","criptoList","setCriptoList","error","setError","moneda","SelectMoneda","cripto","SelectCriptoMoneda","useEffect","a","axios","get","resultado","data","Data","queryAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizar","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","criptomoneda","setResultado","wait","setWait","url","setTimeout","DISPLAY","cotizarCriptomoneda","component","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a1379a2.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    --webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst useModena = (label, stateInitial, options) => {\r\n\r\n    \r\n    const [state, setState] = useState('');\r\n\r\n    const Seleccionar = () => (\r\n        <>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => setState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\">-- Seleccionar --</option>\r\n                {options.map(option => (\r\n                    <option\r\n                        key={option.codigo}\r\n                        value={option.codigo}\r\n                    >\r\n                        {option.nombre}\r\n                    </option>\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n    return [state, Seleccionar, setState];\r\n};\r\n\r\nexport default useModena;","import React, {useState} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    --webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst useCriptomoneda = (label, stateInitial, options) => {\r\n\r\n    const [state, setState] = useState('');\r\n\r\n    const SelectCripto = () => (\r\n        <>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => setState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\">-- Seleccionar --</option>\r\n                {options.map(option => (\r\n                    <option\r\n                        key={option.CoinInfo.Id}\r\n                        value={option.CoinInfo.Name}\r\n                    >\r\n                        {option.CoinInfo.FullName}\r\n                    </option>\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n    return [state, SelectCripto, setState];\r\n};\r\n\r\nexport default useCriptomoneda;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst MessageError = styled.p`\r\n    background-color: #B7322C;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: 'Bebas Neue', cursive;\r\n`;\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <MessageError>\r\n            {mensaje}\r\n        </MessageError>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, {useState, useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport useModena from '../hooks/useModena';\r\nimport useCriptomoneda from '../hooks/useCriptomoneda';\r\nimport axios from 'axios';\r\nimport Error from './Error';\r\n\r\nconst Button = styled.button`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66A2FE;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color: white;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover {\r\n        background-color: #326AC0;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Form = ({setMoneda, setCriptomoneda}) => {\r\n\r\n    const [criptoList, setCriptoList] = useState([]);\r\n    const [error, setError] = useState(false); \r\n\r\n\r\n    const MONEDAS = [\r\n        { codigo: 'USD', nombre: 'Dolar de estados unidos' },\r\n        { codigo: 'MXN', nombre: 'Peso Mexicano' },\r\n        { codigo: 'EUR', nombre: 'Euro' },\r\n        { codigo: 'GBP', nombre: 'Lobra exterlina' },\r\n    ];\r\n\r\n    const [moneda, SelectMoneda] = useModena('Selecciona tu moneda', '', MONEDAS);\r\n    const [cripto, SelectCriptoMoneda] = useCriptomoneda('Selecciona tu criptomoneda', '', criptoList);\r\n\r\n    useEffect(() => {\r\n        const queryAPI = async () => {\r\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            setCriptoList(resultado.data.Data);\r\n\r\n        }\r\n\r\n        queryAPI();\r\n    }, []);\r\n\r\n    const contizarMoneda = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (moneda === '' || cripto === '') {\r\n            setError(true);\r\n            return\r\n        }\r\n\r\n        setError(false);\r\n        setMoneda(moneda);\r\n        setCriptomoneda(cripto);\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={contizarMoneda}\r\n        >\r\n            {error ? <Error mensaje='Los campos son obligatorios' /> : null}\r\n\r\n            <SelectMoneda />\r\n\r\n            <SelectCriptoMoneda />\r\n\r\n            <Button type=\"submit\">Calcular</Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ResultadoDiv = styled.div`\r\n    color: white;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n    font-size: 18px;\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n    span {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Cotizar = ({resultado}) => {\r\n\r\n    if (Object.keys(resultado).length === 0) return null;\r\n\r\n    return (\r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\r\n            <Info>Precio mas alto del dia: <span>{resultado.HIGHDAY}</span></Info>\r\n            <Info>Precio mas bajo del dia: <span>{resultado.LOWDAY}</span></Info>\r\n            <Info>Variación en últimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\r\n            <Info>Última actualización: <span>{resultado.LASTUPDATE}</span></Info>\r\n        </ResultadoDiv>\r\n    );\r\n};\r\n\r\nexport default Cotizar;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport Form from './components/Form';\nimport imagen from './cryptomonedas.png';\nimport axios from 'axios';\nimport Cotizar from './components/Cotizar';\nimport Spinner from './components/Spinner';\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n  }\n`;\n\nfunction App() {\n\n  const [moneda, setMoneda] = useState('');\n  const [criptomoneda, setCriptomoneda] = useState('');\n  const [resultado, setResultado] = useState({});\n  const [wait, setWait] = useState(false);\n\n  useEffect(() => {\n\n    const cotizarCriptomoneda = async () => {\n      if (moneda === '' || criptomoneda === '') return;\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      setWait(true);\n\n      setTimeout(() => {\n\n        setWait(false);\n\n        setResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n\n      }, 3000);\n\n    }\n\n    cotizarCriptomoneda();\n\n  }, [moneda, criptomoneda]);\n\n  const component = (wait) ? <Spinner /> : <Cotizar resultado={resultado} />;\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen\n          src={imagen}\n          alt=\"Imagen crypto\"\n        />\n      </div>\n      <div>\n        <Heading>Cotiza critomonedas al instante</Heading>\n        <Form\n          setMoneda={setMoneda}\n          setCriptomoneda={setCriptomoneda}\n        />\n        {component}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}